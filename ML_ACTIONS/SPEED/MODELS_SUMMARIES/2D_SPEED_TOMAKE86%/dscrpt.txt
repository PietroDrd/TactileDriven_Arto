def build_MultiBranchModel(input_shape1, input_shape2, input_shape3, input_shape4, num_classes):
    # Branch 1
    input1 = Input(shape=input_shape1, name='input1')
    x1 = Conv2D(128, kernel_size=(20, 20), strides=(5,5), activation='relu', padding='same')(input1)
    x1 = MaxPooling2D(pool_size=(2, 2))(x1)
    x1 = Conv2D(128, kernel_size=(2, 2), activation='relu', padding='same')(x1)
    x1 = GlobalMaxPooling2D()(x1)
    
    # Branch 2
    input2 = Input(shape=input_shape2, name='input2')
    x2 = Conv2D(128, kernel_size=(10, 10), strides=(5,5), activation='relu', padding='same')(input2)
    x2 = MaxPooling2D(pool_size=(2, 2))(x2)
    x2 = Conv2D(128, kernel_size=(4, 4), strides=(2,2), activation='relu', padding='same')(x2)
    x2 = MaxPooling2D(pool_size=(2, 2))(x2)
    x2 = Conv2D(128, kernel_size=(2, 2), activation='relu', padding='same')(x2)
    x2 = GlobalMaxPooling2D()(x2)
    
    # Branch 3
    input3 = Input(shape=input_shape3, name='input3')
    x3 = Conv2D(128, kernel_size=(20, 20), strides=(5,5), activation='relu', padding='same')(input3)
    x3 = MaxPooling2D(pool_size=(2, 2))(x3)
    x3 = Conv2D(128, kernel_size=(2, 2), activation='relu', padding='same')(x3)
    x3 = GlobalMaxPooling2D()(x3)
    
    # Branch 4
    input4 = Input(shape=input_shape4, name='input4')
    x4 = Conv2D(128, kernel_size=(10, 10), strides=(5,5), activation='relu', padding='same')(input4)
    x4 = MaxPooling2D(pool_size=(2, 2))(x4)
    x4 = Conv2D(128, kernel_size=(4, 4), strides=(2,2), activation='relu', padding='same')(x4)
    x4 = Conv2D(128, kernel_size=(2, 2), activation='relu', padding='same')(x4)
    x4 = GlobalMaxPooling2D()(x4)
    
    # Concatenate branches
    merged = Concatenate()([x1, x2, x3, x4])
    
    # Dense layers for classification
    dense = Dense(128, activation='relu')(merged)
    dense = Dropout(0.1)(dense)
    dense = Dense(64, activation='relu')(dense)
    output = Dense(OUT_N, activation='softmax')(dense)
    
    # Create model
    model = Model(inputs=[input1, input2, input3, input4], outputs=output)
    
    return model

Model: "functional_3"
┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┓
┃ Layer (type)        ┃ Output Shape      ┃    Param # ┃ Connected to      ┃
┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━┩
│ input2 (InputLayer) │ (None, 1800, 128, │          0 │ -                 │
│                     │ 1)                │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ conv2d_32 (Conv2D)  │ (None, 360, 26,   │     12,928 │ input2[0][0]      │
│                     │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ input4 (InputLayer) │ (None, 1800, 256, │          0 │ -                 │
│                     │ 1)                │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ input1 (InputLayer) │ (None, 1800, 128, │          0 │ -                 │
│                     │ 1)                │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ max_pooling2d_12    │ (None, 180, 13,   │          0 │ conv2d_32[0][0]   │
│ (MaxPooling2D)      │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ input3 (InputLayer) │ (None, 1800, 256, │          0 │ -                 │
│                     │ 1)                │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ conv2d_37 (Conv2D)  │ (None, 360, 52,   │     12,928 │ input4[0][0]      │
│                     │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ conv2d_30 (Conv2D)  │ (None, 360, 26,   │     51,328 │ input1[0][0]      │
│                     │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ conv2d_33 (Conv2D)  │ (None, 90, 7,     │    262,272 │ max_pooling2d_12… │
│                     │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ conv2d_35 (Conv2D)  │ (None, 360, 52,   │     51,328 │ input3[0][0]      │
│                     │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ max_pooling2d_15    │ (None, 180, 26,   │          0 │ conv2d_37[0][0]   │
│ (MaxPooling2D)      │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ max_pooling2d_11    │ (None, 180, 13,   │          0 │ conv2d_30[0][0]   │
│ (MaxPooling2D)      │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ max_pooling2d_13    │ (None, 45, 3,     │          0 │ conv2d_33[0][0]   │
│ (MaxPooling2D)      │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ max_pooling2d_14    │ (None, 180, 26,   │          0 │ conv2d_35[0][0]   │
│ (MaxPooling2D)      │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ conv2d_38 (Conv2D)  │ (None, 90, 13,    │    262,272 │ max_pooling2d_15… │
│                     │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ conv2d_31 (Conv2D)  │ (None, 180, 13,   │     65,664 │ max_pooling2d_11… │
│                     │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ conv2d_34 (Conv2D)  │ (None, 45, 3,     │     65,664 │ max_pooling2d_13… │
│                     │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ conv2d_36 (Conv2D)  │ (None, 180, 26,   │     65,664 │ max_pooling2d_14… │
│                     │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ conv2d_39 (Conv2D)  │ (None, 90, 13,    │     65,664 │ conv2d_38[0][0]   │
│                     │ 128)              │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ global_max_pooling… │ (None, 128)       │          0 │ conv2d_31[0][0]   │
│ (GlobalMaxPooling2… │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ global_max_pooling… │ (None, 128)       │          0 │ conv2d_34[0][0]   │
│ (GlobalMaxPooling2… │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ global_max_pooling… │ (None, 128)       │          0 │ conv2d_36[0][0]   │
│ (GlobalMaxPooling2… │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ global_max_pooling… │ (None, 128)       │          0 │ conv2d_39[0][0]   │
│ (GlobalMaxPooling2… │                   │            │                   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ concatenate_3       │ (None, 512)       │          0 │ global_max_pooli… │
│ (Concatenate)       │                   │            │ global_max_pooli… │
│                     │                   │            │ global_max_pooli… │
│                     │                   │            │ global_max_pooli… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ dense_9 (Dense)     │ (None, 128)       │     65,664 │ concatenate_3[0]… │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ dropout_3 (Dropout) │ (None, 128)       │          0 │ dense_9[0][0]     │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ dense_10 (Dense)    │ (None, 64)        │      8,256 │ dropout_3[0][0]   │
├─────────────────────┼───────────────────┼────────────┼───────────────────┤
│ dense_11 (Dense)    │ (None, 4)         │        260 │ dense_10[0][0]    │
└─────────────────────┴───────────────────┴────────────┴───────────────────┘
 Total params: 2,969,678 (11.33 MB)
 Trainable params: 989,892 (3.78 MB)
 Non-trainable params: 0 (0.00 B)
 Optimizer params: 1,979,786 (7.55 MB)

Model Configuration:
Optimizer: <keras.src.optimizers.adam.Adam object at 0x7f5072d53f70>
Loss Function: sparse_categorical_crossentropy
Learning Rate: <KerasVariable shape=(), dtype=float32, path=adam/learning_rate>

Train loss: 0.296413779258728
Test val_loss: 0.4379175305366516
Train accuracy: 0.9032257795333862
Accuracy Score: 0.8279569892473119
F1 Score: 0.8191839447102605
Classification Report:
               precision    recall  f1-score   support

         0.0       0.96      0.83      0.89        29
         1.0       0.86      0.86      0.86        22
         2.0       0.75      0.95      0.84        22
         3.0       0.72      0.65      0.68        20

    accuracy                           0.83        93
   macro avg       0.82      0.82      0.82        93
weighted avg       0.84      0.83      0.83        93

Training History:
accuracy: [0.2867383658885956, 0.4372759759426117, 0.5734767317771912, 0.6057347655296326, 0.5842294096946716, 0.6057347655296326, 0.7419354915618896, 0.774193525314331, 0.8064516186714172, 0.8602150678634644, 0.7885304689407349, 0.856630802154541, 0.856630802154541, 0.8136200904846191, 0.8637992739677429, 0.8996415734291077, 0.8960573673248291, 0.8602150678634644, 0.8745519518852234, 0.9103942513465881, 0.9211469292640686, 0.9103942513465881, 0.8817204236984253, 0.9068100452423096, 0.9032257795333862]
loss: [1.5593197345733643, 1.3388495445251465, 1.1082701683044434, 0.9712943434715271, 0.9995981454849243, 0.9821177124977112, 0.761031448841095, 0.5978909730911255, 0.5114679336547852, 0.4037075340747833, 0.5427854657173157, 0.38067156076431274, 0.3610607087612152, 0.402114599943161, 0.3244771957397461, 0.27741867303848267, 0.301076740026474, 0.35627657175064087, 0.33682742714881897, 0.24235878884792328, 0.1611873209476471, 0.2045661360025406, 0.2665855288505554, 0.2409229278564453, 0.296413779258728]
val_accuracy: [0.40860214829444885, 0.3978494703769684, 0.6666666865348816, 0.602150559425354, 0.6344085931777954, 0.6881720423698425, 0.7096773982048035, 0.8172042965888977, 0.7849462628364563, 0.7634408473968506, 0.8172042965888977, 0.7956989407539368, 0.6666666865348816, 0.774193525314331, 0.8279569745063782, 0.7849462628364563, 0.8709677457809448, 0.7849462628364563, 0.8494623899459839, 0.8172042965888977, 0.8279569745063782, 0.7526881694793701, 0.8172042965888977, 0.7849462628364563, 0.8279569745063782]
val_loss: [1.4179551601409912, 1.2273591756820679, 0.9839403629302979, 1.0841622352600098, 0.9566119909286499, 0.9173629879951477, 0.7585028409957886, 0.5797027945518494, 0.6737067699432373, 0.5984567999839783, 0.692800760269165, 0.6432319283485413, 0.748920738697052, 0.587787926197052, 0.5661339163780212, 0.737828254699707, 0.4361623525619507, 0.7947337031364441, 0.5016060471534729, 0.8008983731269836, 0.6314257383346558, 1.0324602127075195, 0.94580078125, 0.848273515701294, 0.4379175305366516]

################################################################################################ 

